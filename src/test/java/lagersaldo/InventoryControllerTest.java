/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package src.test.java.lagersaldo;

import static org.junit.jupiter.api.Assertions.*;

import javax.imageio.IIOException;

// import static org.junit.jupiter.params.provider.ValueSource;
// import static org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;
import org.junit.jupiter.params.provider.EmptySource;
import org.junit.jupiter.api.Test;


import src.main.java.lagersaldo.InventoryController;


public class InventoryControllerTest {

    @ParameterizedTest(name = "testing the valid input {0}")
    @ValueSource(strings = { "S1", "I2", "L", "S100000", "I20000" })
    public void testValidInput(String input) {
        InventoryController controller = new InventoryController();
        boolean result = controller.validInput(input);
        assertTrue(result);
    }

    @ParameterizedTest(name = "testing the invalid input {0}")
    @EmptySource
    @ValueSource(strings = { "S-1", "S", "I-1", "I", "L123" })
    public void testInvalidInput(String input) {
        InventoryController controller = new InventoryController();
        boolean result = controller.validInput(input);
        assertFalse(result);
    }

    @ParameterizedTest(name = "testing performing valid and allowed action {0}")
    @ValueSource(strings = { "I2", "L", "I20000" })
    public void testValidPerformAction(String input) {
        InventoryController controller = new InventoryController();

        String result = controller.performAction(input);

        assertTrue(result.length() > 0);
    }

    @ParameterizedTest(name = "testing valid Sell action {0}")
    @ValueSource(strings = { "S1", "S20000" })
    public void testAllowedSellAction(String input) {
        InventoryController controller = new InventoryController();
        controller.performAction("I20000");
        String result = controller.performAction(input);

        assertTrue(result.length() > 0);
    }

    @ParameterizedTest(name = "testing valid but not allowed action {0}")
    @ValueSource(strings = { "S1", "S20000" })
    public void testNotAllowedSellAction(String input) {
        InventoryController controller = new InventoryController();

        Exception exception = assertThrows(IllegalArgumentException.class, () -> {
            String result = controller.performAction(input);
        });
    }

    @ParameterizedTest(name = "testing performing invalid action {0}")
    @EmptySource
    @ValueSource(strings = { "S-1", "S", "I-1", "I", "L123" })
    public void testInvalidPerformAction(String input) {
        InventoryController controller = new InventoryController();

        Exception exception = assertThrows(IllegalArgumentException.class, () -> {
            String result = controller.performAction(input);
        });
    }

    // @Test
    // public void testGetAction() throws IIOException{
    //     InventoryAction actual = InputHandler.getAction("S1");

    //     assertEquals("S", actual.getType());
    //     assertEquals("1", actual.getQuantity());
    // }


}
